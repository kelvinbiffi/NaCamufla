{
  "name": "gulp-param",
  "version": "1.0.3",
  "description": "Add params to your tasks",
  "main": "index.js",
  "scripts": {
    "test": "mocha",
    "patch-release": "npm version patch && npm publish && git push --follow-tags",
    "minor-release": "npm version minor && npm publish && git push --follow-tags",
    "major-release": "npm version major && npm publish && git push --follow-tags"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/stoeffel/gulp-param"
  },
  "files": [
    "index.js"
  ],
  "keywords": [
    "gulp",
    "cli",
    "arguments",
    "parameter",
    "injection"
  ],
  "author": {
    "name": "stoeffel"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/stoeffel/gulp-param/issues"
  },
  "homepage": "https://github.com/stoeffel/gulp-param",
  "devDependencies": {
    "chai": "^3.4.1",
    "gulp": "^3.9.0",
    "gulp-uglify": "^1.5.1",
    "mocha": "^2.3.0"
  },
  "dependencies": {
    "debug": "^2.2.0",
    "node-stringify": "0.0.19",
    "minimist": "*",
    "retrieve-arguments": "~1.0.0"
  },
  "readme": "gulp-param\n==========\n[![Build Status](https://travis-ci.org/stoeffel/gulp-param.svg)](https://travis-ci.org/stoeffel/gulp-param) [![npm version](https://badge.fury.io/js/gulp-param.svg)](http://badge.fury.io/js/gulp-param)\n\n> Plugin injects arguments from the command line into your tasks.\n\nPlease use wrapped instance of gulp to have inject feature available.\n\nInstallation\n------------\n\n`npm install gulp-param`\n\nAPI\n------------\n\n```js\n  var gulp = require('gulp-param')(require('gulp'), process.argv);\n\n  gulp.task('dep', function(debug) {\n    console.log(debug); // => true\n  });\n\n  gulp.task('build', ['dep'], function(debug, tag) {\n    console.log(debug); // => true\n    console.log(tag); // => 'v1.0.0'\n  });\n\n  // $ gulp build --debug --tag v1.0.0\n```\n\n### constructor(gulp, cmdArgs, gulpCallbackName): gulp\n\n- `gulp` an instance of gulp.\n- `cmdArgs` arguments from command line. In most cases it would be `process.argv`\n- `gulpCallbackName` name of methodargument which will be use to inject async gulp callback. It is an option parameter. If you not defined it a default value would be set to `callback`\n- returns wrapped gulp instance with enabled param injection.\n",
  "readmeFilename": "README.md",
  "_id": "gulp-param@1.0.3",
  "dist": {
    "shasum": "e79467eb26d49752f157d2a41c8e872958193aaf"
  },
  "_from": "gulp-param@",
  "_resolved": "https://registry.npmjs.org/gulp-param/-/gulp-param-1.0.3.tgz"
}
